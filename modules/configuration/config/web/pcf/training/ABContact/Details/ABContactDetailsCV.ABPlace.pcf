<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <CardViewPanel
    id="ABContactDetailsCV"
    mode="ABPlace|ABLegalVenue">
    <Require
      name="anABContact"
      type="ABContact"/>
    <Card
      id="PlaceInfoCard"
      title="displaykey.Training.PlaceInfoCard"
      visible="anABContact typeis ABPlace">
      <PanelRef
        def="ABContactDetailsPlaceDV(anABContact)"/>
    </Card>
    <Card
      id="PhoneAddressesCard"
      title="displaykey.Training.PhoneAddressesCard">
      <DetailViewPanel
        editable="true"
        id="PhoneAndAddressesDV">
        <InputColumn>
          <Label
            id="Phone"
            label="displaykey.Training.PhoneNumbers"/>
          <InputSetRef
            def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(anABContact, ABContact#HomePhone), displaykey.Web.ContactDetail.Phone.Home, false))"
            id="HomePhone"/>
          <InputSetRef
            def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(anABContact, ABContact#WorkPhone), displaykey.Web.ContactDetail.Phone.Work, false))"
            id="WorkPhone"/>
          <InputSetRef
            def="GlobalPhoneInputSet(new gw.api.phone.StandardPhoneOwner(new gw.api.phone.ContactPhoneDelegate(anABContact, ABContact#FaxPhone), displaykey.Web.ContactDetail.Phone.Fax, false))"
            id="FaxPhone"/>
          <Label
            id="PrimaryAddress"
            label="displaykey.Training.PrimaryAddress"/>
          <InputSetRef
            def="AddressOwnerInputSet(anABContact.AddressOwner, true)"
            id="BasicAddressInputSet"/>
        </InputColumn>
      </DetailViewPanel>
    </Card>
    <Card
      id="AnalysisCard"
      title="displaykey.Training.Analysis">
      <DetailViewPanel>
        <InputColumn>
          <Label
            id="LabComplete"
            label="displaykey.Training.LabComplete"/>
        </InputColumn>
      </DetailViewPanel>
    </Card>
    <Code><![CDATA[uses gw.api.util.DisplayableException

/* This function toggles the recommended status of a vendor. If the vendor
   is not recommended (and it has at least one evaluation), then the vendor
   is recommended and the custom "ABContactRecommended" event is added. (This
   event triggers a messaging integration point.) If the vendor is recommended,
   then this function unrecommends the vendor and clears out any profile code
   received from the integration point.
*/
   function toggleVendorRecommendedFlag() : void {
      // create new bundle
      gw.transaction.Transaction.runWithNewBundle(\ bundle -> {
         var thisVendor = bundle.add(anABContact)

         if (thisVendor.IsVendorRecommended) {
            // If vendor is already recommended, switch flag to not 
            // recommended and clear out profile code                    
            thisVendor.IsVendorRecommended = false
            thisVendor.VendorProfileCode = null
       
            } else {
               // If vendor is not recommended, verify that there is
               // at least one evaluation                           
                  if (thisVendor.VendorEvaluations.length == 0) {
                     throw new DisplayableException(displaykey.Training.NoEvaluations)
          
               } else {
                  // Vendor is not yet recommendeded and has at least one eval!
                  // calculate sum of eval scores                   
                  var evaluationSum = 0
                  for (thisEvaluation in anABContact.VendorEvaluations) {
                     evaluationSum = evaluationSum + thisEvaluation.TotalScore
                     }             
                  // switch flag to recommended and sent evaluations to external vendor
                  thisVendor.IsVendorRecommended = true
                  thisVendor.addEvent("ABContactRecommended")
                  thisVendor.VendorProfileCode = "(pending)"
                  } // end 
               }
      
         // runWithNewBundle() inherently commits the data              
         })
    
   } // end of function]]></Code>
  </CardViewPanel>
</PCF>