<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- ListView that displays the results of a Group search that allows the user to
    select one of the results by clicking on the appropriate "Select" button.

    This version is AB-specific in that the Organization column is removed
    since AB has no concept of multiple organizations. -->
  <ListViewPanel
    id="GroupSearchPickerResultsLV">
    <Require
      name="groupList"
      type="GroupQuery"/>
    <Require
      name="restrictedGroup"
      type="Group"/>
    <RowIterator
      canPick="restrictedGroup == null or (group != restrictedGroup and not restrictedGroup.isAncestor(group))"
      editable="false"
      elementName="group"
      pickValue="group"
      value="groupList">
      <Row>
        <Cell
          id="Web_GroupSearchResults_Name"
          label="displaykey.Web.GroupSearchResults.Name"
          sortBy="group.Name"
          sortOrder="1"
          value="group"/>
        <Cell
          id="Web_GroupSearchResults_ParentGroup"
          label="displaykey.Web.GroupSearchResults.ParentGroup"
          sortBy="group.Parent.Name"
          value="group.Parent"/>
        <TypeKeyCell
          id="Web_GroupSearchResults_Type"
          label="displaykey.Web.GroupSearchResults.Type"
          value="group.GroupType"/>
        <TextCell
          id="Web_GroupSearchResults_Relationship"
          label="displaykey.Web.GroupSearchResults.Relationship"
          value="getRelationshipForGroups(group)"/>
      </Row>
    </RowIterator>
    <Code><![CDATA[
function getRelationshipForGroups(group : Group) : String {
  if (restrictedGroup != null) {
    if (group == restrictedGroup) {
      return displaykey.Web.GroupSearchResults.Relationship.Current;
    } else if (restrictedGroup.isAncestor(group)) {
      return displaykey.Web.GroupSearchResults.Relationship.ChildOfCurrent;
    }
  }
  return "";
}
    ]]></Code>
  </ListViewPanel>
</PCF>